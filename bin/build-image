#!/usr/bin/env bash

# Copyright 2011, Joyent. Inc. All rights reserved.

set -o errexit
set -o pipefail

timestamp=`date +%Y%m%d%H%M%S`

fatal() {
  printf "$(basename $0): fatal error: $*\n"
  exit 1
}

create_layout() {
  echo "==> Copying files and creating layout"
  [[ ! -d cache ]] && mkdir cache
  [[ ! -d cache/sdc-vm-tools ]] && mkdir cache/sdc-vm-tools
  cp -r layout/* cache/sdc-vm-tools/
  cp -r src/windows cache/sdc-vm-tools/
  cp -r src/linux cache/sdc-vm-tools/
}

pack_tar() {
  echo "==> Creating tarball"
  cd cache
  tar -czf sdc-vm-tools-$timestamp.tar.gz sdc-vm-tools
  cd ../
}

create_zip() {
  echo "==> Creating zipfile"
  cd cache
  ZIP=`which zip`
  if [[ $? -ne 0 ]]; then
    echo "Cannot find a zip tool. Skipping zip file creation"
  else
    $ZIP -q -r sdc-vm-tools-$timestamp.zip sdc-vm-tools
  fi
  cd ../
}


pack_iso() {
  echo "==> Creating ISO"
  cd cache
  case `uname -s` in
    Darwin)
      hdiutil makehybrid -default-volume-name "SDC Guest Tools" -iso -joliet \
        -o sdc-vm-tools-$timestamp.iso sdc-vm-tools
      ;;
    SunOS)
      mkisofs -J -R -input-charset iso8859-1 -V "SDC Guest Tools" \
        -o sdc-vm-tools-$timestamp.iso sdc-vm-tools
      ;;
    Linux)
      mkisofs -J -R -input-charset iso8859-1 -V "SDC Guest Tools" \
        -o sdc-vm-tools-$timestamp.iso sdc-vm-tools
      ;;
    *)
      fatal "Not a supported Operating system. Try it on OSX or SmartOS"
      ;;
  esac
  cd ../
}

# ensure we're always in the right working directory
cd $(dirname $0)/../
echo "==> Starting ISO build"
create_layout
pack_iso
pack_tar
create_zip
echo "==> DONE"
exit 0
